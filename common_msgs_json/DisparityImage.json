{
    "$file": "common_msgs/stereo_msgs/msg/DisparityImage.msg",
    "#": [
        " Separate header for compatibility with current TimeSynchronizer.",
        " Likely to be removed in a later release, use image.header instead.",
        " Floating point disparity image. The disparities are pre-adjusted for any",
        " x-offset between the principal points of the two cameras (in the case",
        " that they are verged). That is: d = x_l - x_r - (cx_l - cx_r)",
        " Stereo geometry. For disparity d, the depth from the camera is Z = fT/d.",
        " Subwindow of (potentially) valid disparity values.",
        " The range of disparities searched.",
        " In the disparity image, any disparity less than min_disparity is invalid.",
        " The disparity search range defines the horopter, or 3D volume that the",
        " stereo algorithm can \"see\". Points with Z outside of:",
        "     Z_min = fT / max_disparity",
        "     Z_max = fT / min_disparity",
        " could not be found.",
        " Smallest allowed disparity increment. The smallest achievable depth range",
        " resolution is delta_Z = (Z^2/fT)*delta_d."
    ],
    "header": {
        "type": "Header",
        "comment": "",
        "constant": ""
    },
    "image": {
        "type": "sensor_msgs/Image",
        "comment": "",
        "constant": ""
    },
    "f": {
        "type": "float32",
        "comment": " Focal length, pixels",
        "constant": ""
    },
    "T": {
        "type": "float32",
        "comment": " Baseline, world units",
        "constant": ""
    },
    "valid_window": {
        "type": "sensor_msgs/RegionOfInterest",
        "comment": "",
        "constant": ""
    },
    "min_disparity": {
        "type": "float32",
        "comment": "",
        "constant": ""
    },
    "max_disparity": {
        "type": "float32",
        "comment": "",
        "constant": ""
    },
    "delta_d": {
        "type": "float32",
        "comment": "",
        "constant": ""
    }
}